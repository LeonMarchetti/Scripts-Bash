#!/bin/bash

# diff-sd - Comparar directorios según sus archivos.
# Se toma el primer directorio como el directorio maestro y el segundo como
# esclavo, el cual se va a tratar de terminar con el mismo contenido que el
# primer directorio. Se ignoran los subdirectorios de ambos directorios.

# Si hay un archivo que está en dir1 pero no en dir2 entonces se copia del
# primero al otro.
# Si un archivo está en dir1 y en dir2 y son iguales entonces se ignoran.
# Si dos archivos con el mismo nombre está en dir1 y en dir2 se copia el de
# dir1 a dir2.
# Si hay un archivo que está en dir2 pero no en dir1 entonces se borra.

# Errores:
#   1   Alguno de los argumentos no es un directorio.
#   2   Se encontró un directorio desconocido en la salida de "diff".
#   3   Falló al copiar un archivo de $dir1 a $dir2.
#   4   Falló al borrar un archivo de $dir2.
#   5   No coincidió la linea con las expresiones regulares.

#region Constantes
readonly DEBUG=
readonly ERASE="\e[K"
readonly REGEX_SOLO="Sólo en (.*): (.*)"
#endregion

#region Colores
CLR_ROJO="\e[91m"
CLR_VERD="\e[92m"
CLR_AMAR="\e[93m"
CLR_FIN="\e[m"
#endregion

#region Globales
solo_dir1=()
solo_dir2=()
#endregion

#region Funciones
_echo() {
    echo -e "${ERASE}${CLR_VERD}$1${CLR_FIN} $2"
}

_echo_r() {
    # Mensaje que luego va a ser sobreescrito
    echo -en "${ERASE}$1${CLR_FIN} $2\r"
}

_error() {
    if [ "$2" ]; then
        echo -e "${ERASE}${CLR_ROJO}$(basename "$0"): $2${CLR_FIN}" >&2
    fi
    exit $1
}

_mostrar_dir() {
    echo -e "${CLR_AMAR}$1${CLR_FIN}:"
}

_borrar() {
    # Borra un archivo.
    # rm $@
    [ $DEBUG ] && return
    gio trash $@ # Envía el archivo a la papelera.
}

_copiar() {
    # Copia un archivo
    # $1: dir/archivo   origen
    # $2: dir/          destino
    [ $DEBUG ] && return
    cp -f "$1" "$2"
}
#endregion

main() {
    [ $DEBUG ] && echo "Inicio diff-sd"

    existe_directorio "$1" ||
        _error 1 "'$1' no es un directorio."

    existe_directorio "$2" ||
        _error 1 "'$2' no es un directorio."

    local dir1="$1"
    local dir2="$2"

    _echo_r "Calculando diferencias"
    local diff=$(calcular_diferencias "$dir1" "$dir2")
    separar_archivos "$dir1" "$dir2" "$diff"

    copiar "$dir1" "$dir2"
    echo
    borrar "$dir2"

    [ $DEBUG ] && echo "Fin diff-sd"
    return 0
}

existe_directorio() {
    # $1: Nombre del parámetro pasado como directorio.
    [[ -d "$1" ]]
}

calcular_diferencias() {
    diff --color=always -q "$1" "$2"
}

separar_archivos() {
    local dir1="$1"
    local dir2="$2"
    local archivo
    local dir
    local linea

    IFS=$'\n'
    for linea in $3; do
        if [[ $linea =~ $REGEX_SOLO ]]; then
            dir=${BASH_REMATCH[1]}
            archivo=${BASH_REMATCH[2]}
            case $dir in
                $dir1)
                    if [[ ! -d "${dir1}/${archivo}" ]] ; then
                        solo_dir1+=($archivo)
                    fi ;;
                $dir2)
                    if [[ ! -d "${dir2}/${archivo}" ]] ; then
                        solo_dir2+=($archivo)
                    fi ;;
                *) _error 2 "directorio desconocido: $dir"
            esac
        fi
    done
}

copiar() {
    # Se copian los archivos que solo están en el primer directorio al segundo.
    local dir1="$1"
    local dir2="$2"
    local archivo

    _mostrar_dir "$dir1"
    for archivo in ${solo_dir1[@]}; do
        _echo_r "Copiando" "$archivo"

        # Compruebo si se trata de un archivo que está en ambos directorios
        # pero son distintos y primero lo borro (para mandarlo a la papelera).
        if [[ -f "${dir2}/${archivo}" ]] ; then
            _echo_r "Borrando" "${dir2}/${archivo}"
            _borrar "${dir2}/${archivo}" ||
                _error 4 "falló borrar ${dir2}/${archivo}"
            _echo "Borrado" "${archivo} en ${dir2}"
        fi

        _copiar "${dir1}/${archivo}" "${dir2}/" ||
            _error 3 "falló copiar $archivo"
        _echo "Copiado" "$archivo"
    done
}

borrar() {
    # Se borran los archivos que estén solo en el segundo directorio.
    local dir2="$1"
    local archivo

    _mostrar_dir "$dir2"
    for archivo in ${solo_dir2[@]}; do
        _echo_r "Borrando" "$archivo"
        _borrar "${dir2}/${archivo}" ||
            _error 4 "falló borrar $archivo"
        _echo "Borrado" "$archivo"
    done
}

main "$@"
